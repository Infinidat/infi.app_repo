<?xml version="1.0" encoding="utf-8"?>
<vadk:MultiVM xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.dmtf.org/ovf/envelope/1" xmlns:vmw="http://www.vmware.com/schema/ovf" xmlns:vadk="http://www.vmware.com/schema/vadk" xmlns:ovf="http://schemas.dmtf.org/ovf/envelope/1" xsi:schemaLocation="http://www.vmware.com/schema/vadk /opt/vmware/etc/build/schemas/vapp.xsd" vadk:version="2.6.0.0">
  <VirtualSystemCollection ovf:id="VSC ovfid">
    <Info>A virtual service</Info>
    <Name/>
    <StartupSection>
      <Info>The startup order of the service</Info>
      <!-- Start order for the VMs in the vapp
                <Item ovf:id="Centos Appliance" ovf:order="1" ovf:startAction="powerOn" ovf:startDelay="120" ovf:stopAction="powerOff" ovf:stopDelay="120" ovf:waitingForGuest="true"/>
            -->
      <Item ovf:id="Application Repository" ovf:order="1" ovf:startAction="powerOn" ovf:startDelay="120" ovf:stopAction="powerOff" ovf:stopDelay="0" ovf:waitingForGuest="false"/>
    </StartupSection>
    <AnnotationSection ovf:required="false">
      <Info>A human-readable annotation</Info>
      <Annotation/>
    </AnnotationSection>
    <ProductSection>
      <Info>vApp ISV branding information</Info>
      <Product>PRODUCT_NAME</Product>
      <Vendor>PRODUCT_VENDOR</Vendor>
      <Version>1.0.0.0</Version>
      <FullVersion>FULL_VERSION</FullVersion>
      <ProductUrl>http://www.infinidat.com</ProductUrl>
      <VendorUrl>http://www.infinidat.com</VendorUrl>
      <AppUrl>http://${app.ip}/</AppUrl>
      <Category>Application</Category>
      <!-- Example OVF property for the vapp
                <Property ovf:key="erwer" ovf:userConfigurable="true" ovf:type="string" ovf:value="sdf">
                    <Label>sdf</Label>
                    <Description>sdf</Description>
                </Property>
            -->
      <!--
                Timezone property values, in hours plus or minus UTC.

                The timezone property key name below (vamitimezone) works in
                the appliances because the VAMI code knows the name of this
                specific ovf property.

                Pacific/Samoa     UTC-11
                US/Hawaii         UTC-10
                US/Alaska         UTC-09
                US/Pacific        UTC-08
                US/Mountain       UTC-07
                US/Central        UTC-06
                US/Eastern        UTC-05
                America/Caracas   UTC-04
                America/Argentina/Buenos_Aires  UTC-03
                America/Recife    UTC-02
                Etc/GMT-1         UTC-01
                Etc/UTC           UTC+00
                Europe/London     UTC+00
                Europe/Paris      UTC+01
                Africa/Cairo      UTC+02
                Europe/Moscow     UTC+03
                Asia/Baku         UTC+04
                Asia/Karachi      UTC+05
                Asia/Calcutta     UTC+05:30
                Asia/Dacca        UTC+06
                Asia/Bangkok      UTC+07
                Asia/Hong_Kong    UTC+08
                Asia/Tokyo        UTC+09
                Australia/Sydney  UTC+10
                Pacific/Noumea    UTC+11
                Pacific/Fiji      UTC+12
            -->
      <Property ovf:key="vamitimezone" ovf:type="string" ovf:userConfigurable="true" ovf:value="Etc/UTC" ovf:qualifiers="ValueMap{&quot;Pacific/Samoa&quot;, &quot;US/Hawaii&quot;, &quot;US/Alaska&quot;, &quot;US/Pacific&quot;, &quot;US/Mountain&quot;, &quot;US/Central&quot;, &quot;US/Eastern&quot;, &quot;America/Caracas&quot;, &quot;America/Argentina/Buenos_Aires&quot;, &quot;America/Recife&quot;, &quot;Etc/GMT-1&quot;, &quot;Etc/UTC&quot;, &quot;Europe/London&quot;, &quot;Europe/Paris&quot;, &quot;Africa/Cairo&quot;, &quot;Europe/Moscow&quot;, &quot;Asia/Baku&quot;, &quot;Asia/Karachi&quot;, &quot;Asia/Calcutta&quot;, &quot;Asia/Dacca&quot;, &quot;Asia/Bangkok&quot;, &quot;Asia/Hong_Kong&quot;, &quot;Asia/Tokyo&quot;, &quot;Australia/Sydney&quot;, &quot;Pacific/Noumea&quot;, &quot;Pacific/Fiji&quot;}">
        <Label>Timezone setting</Label>
        <Description>Sets the selected timezone settings for all the Linux VMs which are part of this vApp.</Description>
      </Property>
    </ProductSection>
  </VirtualSystemCollection>
  <vmw:IpAssignmentSection ovf:required="false" vmw:protocols="IPv4,IPv6" vmw:schemes="">
    <Info>Supported IP assignment schemes</Info>
  </vmw:IpAssignmentSection>
  <vadk:VServiceSection/>
  <vadk:Resources>
    <!-- Shares for the VMs in the vapp
        <vadk:Resource vadk:ovfid='sles'>
            <vadk:cpu vadk:weight="5000" vadk:reservation="1000"/>
            <vadk:memory vadk:weight="10000"/>
        </vadk:Resource>
        -->
    <vadk:Resource vadk:ovfid="Application Repository">
      <vadk:cpu vadk:weight="5000" vadk:reservation="0"/>
      <vadk:memory vadk:weight="5000" vadk:reservation="0"/>
    </vadk:Resource>
  </vadk:Resources>
  <vadk:VMCollection>
    <!--
            If a location is non-empty, it means "include the built VM
            at this location."

            If a location is empty, it means use this "use the

            specified profile attribute and build a VM to be included".
        -->
    <!--
            <vadk:VM vadk:ovfid="sles" vadk:appurl="true" vadk:profile="/root/sles" vadk:location="http://[VADK.localIP]/build/sles_1/exports/ovf/Appliance_1.0.ovf" />
        -->
    <vadk:VM vadk:location="" vadk:profile="PROJECT_NAME" vadk:ovfid="PRODUCT_NAME" vadk:appurl="true"/>
  </vadk:VMCollection>
  <vadk:DistributionFormat vadk:format="ovf" vadk:enabled="true" vadk:filename="foo">
    <vadk:PostOutputCreation>
      <vadk:Script vadk:name="sign" vadk:enabled="false">
#
# This script will be passed the full path to the ovffile as $1
#
# The script should produce a detached signature file with
# a .cert extension into the same directory as the passed ovffile.
#

#
# this will generate a self-signed certificate and sign the OVF with it.
#
cd `dirname $1`
wget PEM_URL -O /tmp/my_pem_file.pem
/opt/vmware/bin/signovf -p /tmp/my_pem_file.pem `basename $1`

#
# if you have your own pem key, you can sign the OVF with it this way:
#
# /opt/vmware/bin/signovf -p /tmp/my_pem_file.pem `basename $1`
#
            </vadk:Script>
    </vadk:PostOutputCreation>
  </vadk:DistributionFormat>
  <vadk:DistributionFormat vadk:format="ova" vadk:enabled="true" vadk:filename="OVA_FILENAME.vapp">
    <vadk:PostOutputCreation/>
  </vadk:DistributionFormat>
</vadk:MultiVM>

